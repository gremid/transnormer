# -*- coding = utf-8 -*-

# Select GPU
gpu = "cuda:0"  # when you did `export CUDA_VISIBLE_DEVICES=1` first

# Random seed (fix for reproducibility)
random_seed = 42


# Data
[data]
paths_train = [
    "data/interim/dtaeval-v4.2/dtaeval-v4.2-train.jsonl",
    # "data/interim/dtak-v03-1600-1699/dtak-v03-1600-1699-train.jsonl",
    # "data/interim/dtak-v03-1700-1799/dtak-v03-1700-1799-train.jsonl",
    # "data/interim/dtak-v03-1800-1899/dtak-v03-1800-1899-train.jsonl",
    ]

paths_validation = [
    "data/interim/dtaeval-v4.2/dtaeval-v4.2-validation.jsonl",
    # "data/interim/dtak-v03-1600-1699/dtak-v03-1600-1699-validation.jsonl",
    # "data/interim/dtak-v03-1700-1799/dtak-v03-1700-1799-validation.jsonl",
    # "data/interim/dtak-v03-1800-1899/dtak-v03-1800-1899-validation.jsonl",
    ]

paths_test = [
    "data/interim/dtaeval-v4.2/dtaeval-v4.2-test.jsonl" ,
    # "data/interim/dtak-v03-1600-1699/dtak-v03-1600-1699-test.jsonl",
    # "data/interim/dtak-v03-1700-1799/dtak-v03-1700-1799-test.jsonl",
    # "data/interim/dtak-v03-1800-1899/dtak-v03-1800-1899-test.jsonl",
    ]
n_examples_train = [
    1_000,
    # 10_000,
    # 1_000_000_000,
    ]
n_examples_validation = [
    1_000,
    # 1_000_000_000,
    # 1_000_000_000,
    ]
# not used
n_examples_test = [
    1,
    # 1_000_000_000,
    # 1_000_000_000,
    ]

[tokenizer]
padding = "longest"
# max_length_input = 512
# max_length_output = 512
# input_transliterator = "Transliterator1"

# Model that is retrained
[language_models]
# checkpoint_encoder = "dbmdz/bert-base-historic-multilingual-cased"
# checkpoint_decoder = "bert-base-multilingual-cased"
checkpoint_encoder_decoder = "google/byt5-small"

[training_hyperparams]
batch_size = 8
epochs = 10
learning_rate = 0.001
logging_steps = 2_000
eval_steps = 4_000
eval_strategy = "steps"
save_steps = 12_000
fp16 = false
# ~6k steps per epoch -> 60k steps in total


# Params for beam search decoding
# see https://huggingface.co/blog/how-to-generate and https://huggingface.co/16transformers/v4.10.1/main_classes/model.html
# These initial parameters were copied from
# https://huggingface.co/blog/warm-starting-encoder-decoder#warm-starting-the-encoder-decoder-model
[beam_search_decoding]
no_repeat_ngram_size = 0
early_stopping = true
length_penalty = 2.0
num_beams = 4
